import{_ as e}from"./chunks/rp2040-overview.ceb82abb.js";import{_ as o,o as r,c as n,d as a}from"./app.03a1dc2c.js";const v=JSON.parse('{"title":"Overview","description":"","frontmatter":{},"headers":[{"level":2,"title":"Arduino Nano RP2040 Connect","slug":"arduino-nano-rp2040-connect","link":"#arduino-nano-rp2040-connect","children":[]}],"relativePath":"guide/overview.md","lastUpdated":1673881432000}'),t={name:"guide/overview.md"},i=a('<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h1><h2 id="arduino-nano-rp2040-connect" tabindex="-1">Arduino Nano RP2040 Connect <a class="header-anchor" href="#arduino-nano-rp2040-connect" aria-hidden="true">#</a></h2><p>The feature packed Arduino Nano RP2040 Connect brings the new Raspberry Pi RP2040 microcontroller, which was developed by the Raspberry Pi Foundation, to the <em>Nano</em> form factor.</p><p><figure id="rp2040"><img src="'+e+'" alt="Arduino Nano RP2040 Connect - Overview" title="Arduino Nano RP2040 Connect - Overview"><figcaption><a href="#rp2040" class="label">Figure 1</a>: Arduino Nano RP2040 Connect - Overview</figcaption></figure></p><p>It features a dual-core Arm Cortex-M0+ processor, 256 KB of on-board SRAM, and support for various communication interfaces such as USB, SPI, and I2C. The board is compatible with the Arduino programming environment and can be used for a wide range of projects, including robotics, IoT, and more (see <a href="#rp2040" class="figure-reference">Figure 1</a>).</p><p>Make the most of the dual core 32-bit Arm速 Cortex速-M0+ to make Internet of Things projects with Bluetooth速 and WiFi connectivity thanks to the U-blox速 Nina W102 module.</p><p>Dive into real-world projects with the onboard accelerometer, gyroscope, RGB LED and microphone.</p><p>For more details, refer to the <a href="https://docs.arduino.cc/hardware/nano-rp2040-connect" target="_blank" rel="noreferrer">offical website of the Arduino Nano RP2040 Connect</a>.</p>',8),c=[i];function d(s,p,h,u,l,f){return r(),n("div",null,c)}const g=o(t,[["render",d]]);export{v as __pageData,g as default};
